// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by client-gen. DO NOT EDIT.

package v2

import (
	"context"

	v2 "github.com/apache/apisix-ingress-controller/api/v2"
	scheme "github.com/apache/apisix-ingress-controller/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ApisixPluginConfigsGetter has a method to return a ApisixPluginConfigInterface.
// A group's client should implement this interface.
type ApisixPluginConfigsGetter interface {
	ApisixPluginConfigs(namespace string) ApisixPluginConfigInterface
}

// ApisixPluginConfigInterface has methods to work with ApisixPluginConfig resources.
type ApisixPluginConfigInterface interface {
	Create(ctx context.Context, apisixPluginConfig *v2.ApisixPluginConfig, opts v1.CreateOptions) (*v2.ApisixPluginConfig, error)
	Update(ctx context.Context, apisixPluginConfig *v2.ApisixPluginConfig, opts v1.UpdateOptions) (*v2.ApisixPluginConfig, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, apisixPluginConfig *v2.ApisixPluginConfig, opts v1.UpdateOptions) (*v2.ApisixPluginConfig, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v2.ApisixPluginConfig, error)
	List(ctx context.Context, opts v1.ListOptions) (*v2.ApisixPluginConfigList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v2.ApisixPluginConfig, err error)
	ApisixPluginConfigExpansion
}

// apisixPluginConfigs implements ApisixPluginConfigInterface
type apisixPluginConfigs struct {
	*gentype.ClientWithList[*v2.ApisixPluginConfig, *v2.ApisixPluginConfigList]
}

// newApisixPluginConfigs returns a ApisixPluginConfigs
func newApisixPluginConfigs(c *ApisixV2Client, namespace string) *apisixPluginConfigs {
	return &apisixPluginConfigs{
		gentype.NewClientWithList[*v2.ApisixPluginConfig, *v2.ApisixPluginConfigList](
			"apisixpluginconfigs",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v2.ApisixPluginConfig { return &v2.ApisixPluginConfig{} },
			func() *v2.ApisixPluginConfigList { return &v2.ApisixPluginConfigList{} }),
	}
}
